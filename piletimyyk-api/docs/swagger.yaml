openapi: 3.0.2
info:
    title: Piletimyyk-API
    version: 1.0.0
    description: API for the sale and management of event tickets
paths:
    /events:
        description: ''
        get:
            tags:
                - events
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of events:
                                    value:
                                        -
                                            - Pärnu Muusikafestival
                                            - Augustibluus
                                            - Tallinna Maraton
                    description: Returns a list of events
            deprecated: false
            operationId: getAllEvents
            summary: Get a list of all events
            description: Returns a list of all events in API to the requesting user
        post:
            requestBody:
                description: Data of event that the user wants to add
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            Example of an event:
                                value:
                                    -
                                        -
                                            title: Üldlaulupidu ja tantsupidu
                                            date: '2025-07-05'
                                            price: '30'
                                            location: Tallinn
                required: true
            tags:
                - events
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                'Event that is added:':
                                    value: |-
                                        [
                                            [
                                                {
                                                    "title": "Music Festival",
                                                    "description": "Celebrating event",
                                                    "date": "2024-06-15",
                                                    "time": "13:000,"
                                                    "price": "33",
                                                    "location": "Tallinn"
                                                }
                                            ]
                                        ]
                    description: 'Return code 201 to user, if creation of new event was successful'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: 'Return status 400 to the user, if one or multiple of parameters are missing'
            deprecated: false
            operationId: createEvent
            summary: Add new event
            description: Adds a new event into the array
    '/events/{id}':
        get:
            tags:
                - events
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/event'
                            examples:
                                Full details of a given id event:
                                    value:
                                        -
                                            -
                                                event_id: 37
                                                title: Laulu- ja tantsupidu XXIV
                                                description: Kogu Eesti rahva üritus
                                                date: '2023-07-01'
                                                time: '16:00'
                                                price: '20'
                                                location: Tallinn
                                            -
                                                event_id: 19
                                                title: Tartu Maraton
                                                description: Kogu Eesti rahva üritus
                                                date: '2023-09-10'
                                                time: '11:00'
                                                price: '15'
                                                location: Tallinn
                    description: Returns full details of a given id event
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Event /w+ was not found ':
                                    value:
                                        -
                                            error: Event \w+ was not found in events array
                    description: Event was not found in events array
            deprecated: false
            operationId: getEventById
            summary: Get full details of an event
            description: Returns full details of a given id event to the requesting user
        put:
            requestBody:
                description: Id of event to be updated
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/event'
                        examples:
                            'Example of event:':
                                value:
                                    -
                                        event_id: 73
                                        title: Viljandi Pärimusmuusika Festival
                                        description: Suurim pärimuse üritus
                                        date: '2025-07-15'
                                        time: '18:00'
                                        price: '77'
                                        location: Viljandi
                required: true
            tags:
                - events
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items: {}
                            examples:
                                'Example of modified event:':
                                    value:
                                        -
                                            -
                                                event_id: 22
                                                title: Station Narva
                                                date: '2025-09-22'
                                                price: '40'
                                                location: Narva
                    description: Returns the modified event to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Missing parameters:':
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: User has not added required parameters to the modified event
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'Missing event:':
                                    value:
                                        -
                                            error: Event not found
                    description: The event to be updated is not found in the array
            deprecated: false
            operationId: updateEvent
            summary: Update an event
            description: 'Returns updated event, when modification of a event is successful'
        delete:
            tags:
                - events
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/message'
                            examples:
                                Event Deletion Success:
                                    value:
                                        -
                                            message: Event successfully deleted
                    description: Event successfully deleted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid Request:
                                    value:
                                        -
                                            error: Bad request
                    description: Bad request. The request could not be understood or some parameters are missing
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Event Deletion Error:
                                    value:
                                        -
                                            error: >-
                                                Event not found. The event with the specified ID does not
                                                exist.
                    description: Event not found. The event with the specified ID does not exist.
            deprecated: false
            operationId: deleteEvent
            summary: Deletes an event
            description: Deletes an event from the system based on the provided event ID
        parameters:
            -
                name: id
                in: path
                required: true
    /tickets:
        get:
            tags:
                - tickets
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items: {}
                            examples:
                                List of tickets:
                                    value:
                                        event_id: 3
                                        user_id: 42
                                        quantity: 2
                                        purchase_date: '2025-01-01'
                    description: Returns a list of events
            deprecated: false
            operationId: getAllTickets
            summary: Get a list of all tickets
            description: Returns a list of all tickets in API to the requesting user
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            Example of a ticket:
                                value:
                                    ticket_id: 1
                                    event_id: 3
                                    user_id: 42
                                    quantity: 2
                                    purchase_date: '2025-01-01'
                required: true
            tags:
                - tickets
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Ticket that is added:
                                    value:
                                        event_id: 3
                                        user_id: 42
                                        quantity: 2
                                        purchase_date: '2025-01-01'
                    description: 'Return code 201 to user, if creation of ticket was successful.'
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: 'Return status 400 to the user, if one or multiple of parameters are missing'
            deprecated: false
            operationId: createTicket
            summary: Add new ticket
            description: Adds a new ticket into the array.
    /users:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of users:
                                    value:
                                        -
                                            first_name: Marju
                                            last_name: Valju
                                            email: marju@email.ee
                                            password: 3R3R3R3R3
                    description: Sends all users to requester
            deprecated: false
            operationId: getAllUsers
            summary: Get a list of all users in API
            description: Retreives all users from the array
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            'Example of a user to be added:':
                                value:
                                    -
                                        first_name: Teele
                                        last_name: Tali
                                        email: teele@hot.ee
                                        password: 3P3P3P3P3
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Example of added user:
                                    value:
                                        first_name: Kalle
                                        last_name: Kusta
                                        email: kalle68@online.ee
                                        password: 4T4T4T4T4
                    description: New user was added
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                'User is missing parameters:':
                                    value:
                                        -
                                            error: One or multiple parameters are missing
                    description: 'When user is missing a parameter, respond with this'
            deprecated: false
            operationId: createUser
            summary: Add new user
            description: New user to be added into the array
    '/users/{id}':
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                            examples:
                                Full details of a given id user:
                                    value:
                                        -
                                            user_id: 83
                                            email: karlk@gmail.com
                                            first_name: Karl
                                            last_name: Kaasik
                                            password: 3K3K3K3K3K3
                    description: Returns full details of a given id user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Event was not found:
                                    value:
                                        error: Event was not found in events array
                    description: User was not found in users array
            deprecated: false
            operationId: getUserById
            summary: Get one user
            description: Retreives a single user with its details from the array
        put:
            requestBody:
                description: Id user to be updated
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
                        examples:
                            Example of user:
                                value:
                                    -
                                        user_id: 84
                                        email: reelika@gmail.com
                                        first_name: Reelik
                                        last_name: Tamm
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user'
                            examples:
                                Example of mofified user:
                                    value:
                                        -
                                            user_id: 58
                                            email: kalvoika@gmail.com
                                            first_name: Kalvi
                                            last_name: Kalle
                                            password: 2P2P2P2P2P2
                    description: Returns the modified user to the user
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing parameters:
                                    value:
                                        error: One or multiple parameters are missing
                    description: User has not added required parameters to the modified user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing user:
                                    value:
                                        -
                                            error: User not found
                    description: The user to be updated is not found in the array
            deprecated: false
            operationId: updateUser
            summary: Update user
            description: 'Returns updated user, when modification was successful'
        delete:
            tags:
                - users
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/message'
                            examples:
                                User deletion success:
                                    value:
                                        -
                                            message: User successfully deleted
                    description: User successfully deleted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid Request:
                                    value:
                                        error: Bad request
                    description: Bad request. The request could not be understood or some parameters are missing
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                User deletion error:
                                    value:
                                        -
                                            error: User not found. The user with the specified ID does not exist
                    description: User not found. The user with the specified ID does not exist.
            deprecated: false
            operationId: deleteUser
            summary: Deletes an user
            description: Deletes an user from the system based on the provided user ID
        parameters:
            -
                name: id
                in: path
                required: true
    '/tickets/{id}':
        description: ''
        get:
            tags:
                - tickets
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                'Example of a ticket with details:':
                                    value:
                                        -
                                            -
                                                ticket_id: 1
                                                event_id: 3
                                                user_id: 42
                                                quantity: 2
                                                purchase_date: '2025-07-27'
                    description: Returns details of a ticket to the user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Ticket was not found:
                                    value:
                                        -
                                            error: Ticket was not found.
                    description: Ticket was not found
            deprecated: false
            operationId: getTicketById
            summary: Get full details of an ticket
            description: Returns details of a given id ticket to the requesting user
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ticket'
                        examples:
                            Example of ticket:
                                value:
                                    -
                                        ticket_id: 33
                                        event_id: 28
                                        user_id: 0
                                        quantity: 36
                                        purchase_date: '2018-01-17'
                required: true
            tags:
                - tickets
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ticket'
                            examples:
                                Example of modified ticket:
                                    value:
                                        -
                                            ticket_id: 88
                                            event_id: 85
                                            user_id: 4
                                            quantity: 15
                                            purchase_date: '2018-01-17'
                    description: Returns the modified ticket to the user
                '400':
                    content:
                        application/json:
                            examples:
                                Missing parameters:
                                    value:
                                        error: One or multiple parameters are missing
                    description: User has not added required parameters to the modified ticket
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing ticket:
                                    value:
                                        -
                                            error: Ticket not found
                    description: The ticket to be updated is not found in the array
            deprecated: false
            operationId: updateTicket
            summary: Update a ticket
            description: 'Returns updated ticket, when modification of a ticket is successful'
        delete:
            tags:
                - tickets
            parameters:
                -
                    name: id
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/message'
                            examples:
                                "Ticket deletion duccess\t":
                                    value:
                                        -
                                            message: Ticket successfully deleted
                    description: Ticket successfully deleted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Invalid Request:
                                    value:
                                        -
                                            error: Bad request
                    description: Bad request. The request could not be understood or some parameters are missing
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                "Ticket deletion error\t":
                                    value:
                                        -
                                            error: >-
                                                Ticket not found. The ticket with the specified ID does not
                                                exist
                    description: Ticket not found. The event with the specified ID does not exist
            deprecated: false
            operationId: deleteTicket
            summary: Deletes a ticket
            description: Deletes a ticket from the system based on the provided ticket ID
        parameters:
            -
                name: id
                in: path
                required: true
    /users/login:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/login'
                        examples:
                            User Credentials:
                                value:
                                    -
                                        email: user@example.com
                                        password: password12345
                required: true
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/message'
                            examples:
                                Login Success Response:
                                    value:
                                        -
                                            message: Login successful.
                    description: Confirms that user has successfully logged in.
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/message'
                            examples:
                                Invalid Credentials Response:
                                    value:
                                        -
                                            message: ' Invalid email or password.'
                    description: >-
                        User should check their credentials and try again, because the provided email or
                        password is incorrect.
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/message'
                            examples:
                                Internal Server Error Response:
                                    value:
                                        message: Error logging in.
                    description: >-
                        User should try again later or contact support if the issue of an error on the server
                        while processing the request persists.
            deprecated: false
            operationId: loginUser
            summary: User login
            description: User to be authenticated.
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        ticket:
            title: Root Type for ticket
            description: ''
            type: object
            properties:
                ticket_id:
                    format: int32
                    type: integer
                event_id:
                    format: int32
                    type: integer
                user_id:
                    format: int32
                    type: integer
                quantity:
                    format: int32
                    type: integer
                purchase_date:
                    format: date
                    type: string
            example:
                ticket_id: 1
                event_id: 3
                user_id: 42
                quantity: 2
                purchase_date: '2025-01-01'
        message:
            title: Root Type for message
            description: ''
            type: object
            properties:
                message:
                    type: string
            example:
                message: Login successful
        event:
            title: Root Type for event
            description: ''
            type: object
            properties:
                event_id:
                    format: int32
                    type: integer
                title:
                    type: string
                descriptrion:
                    type: string
                date:
                    format: date
                    type: string
                time:
                    type: string
                price:
                    type: string
                location:
                    type: string
            example:
                event_id: 34
                title: Ürituse nimi
                descriptrion: Ürituse kirjeldus
                date: '2024-06-15'
                time: '12:00'
                price: '20'
                location: Asukoht
        user:
            title: Root Type for user
            description: ''
            type: object
            properties:
                user_id:
                    format: int32
                    type: integer
                first_name:
                    type: string
                last_name:
                    type: string
                email:
                    type: string
                password:
                    type: string
            example:
                user_id: 42
                first_name: Krista
                last_name: Tamm
                email: kristat@example.com
                password: 1P1P1P1P1
        login:
            title: Root Type for login
            description: ''
            type: array
            items:
                type: object
                properties:
                    email:
                        type: string
                    password:
                        type: string
            example:
                -
                    email: user@example.com
                    password: password12345
